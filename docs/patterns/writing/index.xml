<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writing on Cupper</title>
    <link>https://thepaciellogroup.github.io/cupper/patterns/writing/</link>
    <description>Recent content in Writing on Cupper</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://thepaciellogroup.github.io/cupper/patterns/writing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Project structure</title>
      <link>https://thepaciellogroup.github.io/cupper/patterns/writing/project-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/cupper/patterns/writing/project-structure/</guid>
      <description>Before you can set about making documentation, you need to know where everything goes. The simplest folder structure looks like this:
 content  _index.md print-version.md patterns  name-of-my-pattern.md name-of-my-other-pattern.md      /content - This is where all of your content lives. You won&amp;rsquo;t need to visit any other folders very frequently. _index.md — This is the content file for your home page. print-version.md — This is a placeholder for the single-page / print-friendly version of you library.</description>
    </item>
    
    <item>
      <title>Markdown &amp; metadata</title>
      <link>https://thepaciellogroup.github.io/cupper/patterns/writing/markdown-and-metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/cupper/patterns/writing/markdown-and-metadata/</guid>
      <description>In Cupper everything is documented using markdown, as a &amp;ldquo;pattern&amp;rdquo;. To create a new pattern file, just add a file with the .md extension to the content/patterns folder. It&amp;rsquo;s recommended you use &amp;ldquo;kebab case&amp;rdquo; to name the file (words separated by hyphens). For example, a pattern with the title &amp;ldquo;Menu button&amp;rdquo; should probably have the filename menu-button. Then you get a nice clean URL: username.github.io/your-library/patterns/menu-button.
If you&amp;rsquo;re not familiar with writing markdown, there are a number of tutorials available.</description>
    </item>
    
    <item>
      <title>Expandable sections</title>
      <link>https://thepaciellogroup.github.io/cupper/patterns/writing/expandable-sections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/cupper/patterns/writing/expandable-sections/</guid>
      <description>In some cases, where there is a lot of content, it&amp;rsquo;s helpful to collapse certain sections. That way, readers get an overview of what&amp;rsquo;s in the content and can choose where to focus in. Cupper provides a shortcode method for creating expandable sections which generates accessible markup using aria-expanded.
The expandable shortcode takes three parameters:
 label — This is the label for the the section heading. level — This is the heading level (e.</description>
    </item>
    
    <item>
      <title>Notes &amp; warnings</title>
      <link>https://thepaciellogroup.github.io/cupper/patterns/writing/notes-and-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/cupper/patterns/writing/notes-and-warnings/</guid>
      <description>Cupper acknowledges that simple markdown is limiting when it comes to writing compelling documentation, so it provides a number of &amp;ldquo;shortcodes&amp;rdquo;. Shortcodes offer a simple syntax for including rich content. For example, Cupper provides shortcodes for including notes and warnings.
Notes You may wish to pick out some content in your pattern&amp;rsquo;s documentation as a note — an aside to the main thrust of the pattern&amp;rsquo;s description. This is possible using the following syntax:</description>
    </item>
    
    <item>
      <title>References</title>
      <link>https://thepaciellogroup.github.io/cupper/patterns/writing/references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/cupper/patterns/writing/references/</guid>
      <description>Cross-references Cupper identifies the main content files in your documentation as patterns, and they&amp;rsquo;re kept in the content/ patterns folder. It&amp;rsquo;s easy to cross-reference patterns using the pattern shortcode. For example, I can reference the  Notes &amp;amp; warnings pattern. Here&amp;rsquo;s what the markdown looks like, including the shortcode:
I can reference the &amp;#x7b;{% pattern &#34;Notes &amp; warnings&#34; %}} pattern here.  This saves you having to worry about pathing and decorates the generated link with a bookmark icon, identifying the link as a pattern reference visually.</description>
    </item>
    
    <item>
      <title>Snippets</title>
      <link>https://thepaciellogroup.github.io/cupper/patterns/writing/snippets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/cupper/patterns/writing/snippets/</guid>
      <description>A lot of the time, your larger documentation patterns will share some common techniques and utilities. For this reason, Cupper lets you save snippets of markdown in a snippets folder, alongside the main content folder.
The example visually-hidden.md snippet describes the CSS needed to create content that is visually hidden but still available to screen readers. Since this is a technique/utility you are likely to use often, it&amp;rsquo;s nice to be able to just drop a snippet into your markdown content.</description>
    </item>
    
    <item>
      <title>Tables of contents</title>
      <link>https://thepaciellogroup.github.io/cupper/patterns/writing/tables-of-contents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thepaciellogroup.github.io/cupper/patterns/writing/tables-of-contents/</guid>
      <description>Pattern pages in Cupper that have two or more subheadings (&amp;lt;h2&amp;gt;s) automatically get a table of contents: a list of links to the main subsections for the page. This feature is made accessible as a navigation region with the &amp;ldquo;Table of contents&amp;rdquo; label and uses an ordered list. The table of contents markup for the  Setup page looks something like this:
&amp;lt;nav class=&amp;quot;toc&amp;quot; aria-labelledby=&amp;quot;toc-heading&amp;quot;&amp;gt; &amp;lt;h2 id=&amp;quot;toc-heading&amp;quot;&amp;gt;Table of contents&amp;lt;/h2&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#cleaning-the-content-folder&amp;quot;&amp;gt;“Cleaning” the content folder&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#the-setup-command&amp;quot;&amp;gt;The setup command&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#the-config-file&amp;quot;&amp;gt;The config file&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#including-a-logo&amp;quot;&amp;gt;Including a logo&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;/nav&amp;gt;  Tables of content are a neat way to break down the content of the page and give users a navigable overview.</description>
    </item>
    
  </channel>
</rss>